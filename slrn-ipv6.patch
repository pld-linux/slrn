diff -Nur slrn-0.9.6.4pl4c.orig/autoconf/acsite.m4 slrn-0.9.6.4pl4c/autoconf/acsite.m4
--- slrn-0.9.6.4pl4c.orig/autoconf/acsite.m4	Thu Jan  1 01:00:00 1970
+++ slrn-0.9.6.4pl4c/autoconf/acsite.m4	Fri Mar 30 04:04:08 2001
@@ -0,0 +1,379 @@
+dnl -*- sh -*-
+dnl Here are some global variables that need initialized.
+
+#AC_DEFUN(JD_PREFIX_DEFAULT,
+#[AC_DIVERT_PUSH(AC_DIVERSION_NOTICE)dnl
+#$1
+#AC_DIVERT_POP()])
+
+AC_DEFUN(JD_INIT,
+[
+#These variable are initialized by JD init function
+CONFIG_DIR=`pwd`
+cd $srcdir
+if test "`pwd`" != "$CONFIG_DIR"
+  then 
+  AC_MSG_ERROR("This software does not support configuring from another directory.   See the INSTALL file")
+  fi
+AC_SUBST(CONFIG_DIR)dnl
+# Note: these will differ if one is a symbolic link
+if test -f /usr/bin/dirname; then
+  JD_Above_Dir=`dirname $CONFIG_DIR`
+else
+# system is a loser
+  JD_Above_Dir=`cd ..;pwd`
+fi
+JD_Above_Dir2=`cd ..;pwd`
+])
+
+dnl-------------------------------------------------------------------------
+
+AC_DEFUN(JD_SET_OBJ_SRC_DIR,
+[
+#---------------------------------------------------------------------------
+# Set the source directory and object directory.   The makefile assumes an
+# abcolute path name.  This is because src/Makefile cds to OBJDIR and compiles
+# the src file which is in SRCDIR
+#---------------------------------------------------------------------------
+SRCDIR=$CONFIG_DIR
+if test "$1" != "."
+then
+  if test -z "$1"
+  then
+    SRCDIR=$SRCDIR/src
+  else
+    SRCDIR=$SRCDIR/$1
+  fi
+fi
+
+OBJDIR=$SRCDIR/"$ARCH"objs
+ELFDIR=$SRCDIR/elf"$ARCH"objs
+AC_SUBST(SRCDIR)dnl
+AC_SUBST(OBJDIR)dnl
+AC_SUBST(ELFDIR)dnl
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_SIMPLE_LIB_DIR,
+[
+changequote(<<, >>)dnl
+define(<<JD_UP_NAME>>, translit($1, [a-z], [A-Z]))dnl
+changequote([, ])dnl
+JD_UP_NAME[]_LIB_DIR=$JD_Above_Dir/$1/libsrc/"$ARCH"objs
+JD_UP_NAME[]_INCLUDE=$JD_Above_Dir/$1/libsrc
+
+if test ! -d "[$]JD_UP_NAME[]_INCLUDE"
+then
+   JD_UP_NAME[]_LIB_DIR=$JD_Above_Dir/$1/src/"$ARCH"objs
+   JD_UP_NAME[]_INCLUDE=$JD_Above_Dir/$1/src
+   if test ! -d "[$]JD_UP_NAME[]_INCLUDE"
+   then
+     echo ""
+     echo WARNING------Unable to find the JD_UP_NAME directory
+     echo You may have to edit $CONFIG_DIR/src/Makefile.
+     echo ""
+   fi
+fi
+
+AC_SUBST(JD_UP_NAME[]_LIB_DIR)dnl
+AC_SUBST(JD_UP_NAME[]_INCLUDE)dnl
+undefine([JD_UP_NAME])dnl
+])
+
+dnl-------------------------------------------------------------------------
+
+AC_DEFUN(JD_FIND_GENERIC,
+[
+changequote(<<, >>)dnl
+define(<<JD_UP_NAME>>, translit($1, [a-z], [A-Z]))dnl
+changequote([, ])dnl
+# Look for the JD_UP_NAME package
+#JD_UP_NAME[]_INCLUDE=""
+#JD_UP_NAME[]_LIB_DIR=""
+
+# This list consists of "include,lib include,lib ..."
+JD_Search_Dirs="$JD_Above_Dir2/$1/libsrc,$JD_Above_Dir2/$1/libsrc/"$ARCH"objs \
+                $JD_Above_Dir/$1/libsrc,$JD_Above_Dir/$1/libsrc/"$ARCH"objs \
+		$JD_Above_Dir2/$1/src,$JD_Above_Dir2/$1/src/"$ARCH"objs \
+                $JD_Above_Dir/$1/src,$JD_Above_Dir/$1/src/"$ARCH"objs \
+		$HOME/include,$HOME/lib"
+
+if test -n "$ARCH"
+then
+ JD_Search_Dirs="$JD_Search_Dirs $HOME/include,$HOME/$ARCH/lib"
+ JD_Search_Dirs="$JD_Search_Dirs $HOME/include,$HOME/sys/$ARCH/lib"
+fi
+
+# Now add the standard system includes.  The reason for doing this is that 
+# the other directories may have a better chance of containing a more recent
+# version.
+
+test "x$exec" = "xNONE" && exec="$ac_default_prefix"
+test "x$exec_prefix" = "xNONE" && exec_prefix="$prefix"
+JD_Search_Dirs="$JD_Search_Dirs \
+                $includedir,$libdir \
+                /usr/local/include,/usr/local/lib \
+		/usr/include,/usr/lib \
+		/usr/include/$1,/usr/lib \
+		/usr/include/$1,/usr/lib/$1"
+
+echo looking for the JD_UP_NAME library
+
+for include_and_lib in $JD_Search_Dirs
+do
+  # Yuk.  Is there a better way to set these variables??
+  generic_include=`echo $include_and_lib | tr ',' ' ' | awk '{print [$]1}'`
+  generic_lib=`echo $include_and_lib | tr ',' ' ' | awk '{print [$]2}'`
+  echo Looking for $1.h in $generic_include
+  echo and lib$1.a in $generic_lib
+  if test -r $generic_include/$1.h && test -r $generic_lib/lib$1.a
+  then
+    echo Found it.
+    JD_UP_NAME[]_LIB_DIR="$generic_lib"
+    JD_UP_NAME[]_INCLUDE="$generic_include"
+    break
+  else
+    if test -r $generic_include/$1.h && test -r $generic_lib/lib$1.so
+    then
+      echo Found it.
+      JD_UP_NAME[]_LIB_DIR="$generic_lib"
+      JD_UP_NAME[]_INCLUDE="$generic_include"
+      break
+    fi
+  fi
+done
+
+if test -n "[$]JD_UP_NAME[]_LIB_DIR"
+then
+    jd_have_$1="yes"
+else
+    echo Unable to find the $JD_UP_NAME library.  
+    echo You may have to edit $CONFIG_DIR/src/Makefile.
+    JD_UP_NAME[]_INCLUDE=$JD_Above_Dir/$1/src
+    JD_UP_NAME[]_LIB_DIR=$JD_Above_Dir/$1/src/"$ARCH"objs
+    jd_have_$1="no"
+fi
+
+JD_UP_NAME[]_INC="-I[$]JD_UP_NAME[]_INCLUDE"
+JD_UP_NAME[]_LIB="-L[$]JD_UP_NAME[]_LIB_DIR"
+
+# gcc under solaris is often not installed correctly.  Avoid specifying
+# -I/usr/include.
+if test "[$]JD_UP_NAME[]INC" = "-I/usr/include"
+then
+    JD_UP_NAME[]_INC=""
+fi
+
+if test "[$]JD_UP_NAME[]LIB" = "-I/usr/lib"
+then
+    JD_UP_NAME[]_LIB=""
+fi
+
+AC_SUBST(JD_UP_NAME[]_LIB)dnl
+AC_SUBST(JD_UP_NAME[]_INC)dnl
+AC_SUBST(JD_UP_NAME[]_LIB_DIR)dnl
+AC_SUBST(JD_UP_NAME[]_INCLUDE)dnl
+undefine([JD_UP_NAME])dnl
+])
+
+dnl-------------------------------------------------------------------------
+
+AC_DEFUN(JD_FIND_SLANG,
+[
+JD_FIND_GENERIC(slang)
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_GCC_WARNINGS,
+[
+AC_ARG_ENABLE(warnings,
+	      [  --enable-warnings       turn on GCC compiler warnings],
+	      [gcc_warnings=$enableval])
+if test -n "$GCC"
+then
+  CFLAGS="$CFLAGS -fno-strength-reduce"
+  if test -n "$gcc_warnings"
+  then
+    CFLAGS="$CFLAGS -Wall -W -pedantic -Winline -Wmissing-prototypes \
+ -Wnested-externs -Wpointer-arith -Wcast-align -Wshadow -Wstrict-prototypes"
+    # Now trim excess whitespace
+    CFLAGS=`echo $CFLAGS`
+  fi
+fi
+])
+
+IEEE_CFLAGS=""
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_IEEE_CFLAGS,
+[
+case "$host_cpu" in
+  *alpha* )
+    if test "$GCC" = yes
+    then
+      IEEE_CFLAGS="-mieee"
+    else
+      IEEE_CFLAGS="-ieee_with_no_inexact"
+    fi
+    ;;
+  * )
+    IEEE_CFLAGS=""
+esac
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_CREATE_ORULE,
+[
+PROGRAM_OBJECT_RULES="$PROGRAM_OBJECT_RULES
+\$(OBJDIR)/$1.o : \$(SRCDIR)/$1.c \$(DOT_O_DEPS) \$("$1"_O_DEP)
+	cd \$(OBJDIR); \$(COMPILE_CMD) \$(SRCDIR)/$1.c
+"
+])
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_CREATE_ELFORULE,
+[
+PROGRAM_ELF_ORULES="$PROGRAM_ELF_ORULES
+\$(ELFDIR)/$1.o : \$(SRCDIR)/$1.c \$(DOT_O_DEPS) \$("$1"_O_DEP)
+	cd \$(ELFDIR); \$(ELFCOMPILE_CMD) \$(SRCDIR)/$1.c
+"
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_CREATE_EXEC_RULE, 
+[  
+PROGRAM_OBJECT_RULES="$PROGRAM_OBJECT_RULES
+$1 : \$(OBJDIR)/$1
+	@echo $1 created in \$(OBJDIR)
+\$(OBJDIR)/$1 : \$(OBJDIR)/$1.o \$("$1"_DEPS) \$(EXECDEPS)
+	\$(CC) -o \$(OBJDIR)/$1 \$(LDFLAGS) \$(OBJDIR)/$1.o \$("$1"_LIBS) \$(EXECLIBS)
+\$(OBJDIR)/$1.o : \$(SRCDIR)/$1.c \$(DOT_O_DEPS) \$("$1"_O_DEP)
+	cd \$(OBJDIR); \$(COMPILE_CMD) \$("$1"_INC) \$(EXECINC) \$(SRCDIR)/$1.c
+"
+])
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_CREATE_MODULE_ORULES,
+[
+ for program_module in $Program_Modules; do
+   JD_CREATE_ORULE($program_module)
+   JD_CREATE_ELFORULE($program_module)
+ done
+])
+
+dnl-------------------------------------------------------------------------
+
+AC_DEFUN(JD_GET_MODULES,
+[
+ PROGRAM_HFILES=""
+ PROGRAM_OFILES=""
+ PROGRAM_CFILES=""
+ PROGRAM_OBJECTS=""
+ PROGRAM_ELFOBJECTS=""
+ PROGRAM_OBJECT_RULES=""
+ PROGRAM_ELF_ORULES=""
+ if test -z "$1"
+ then
+   Program_Modules=""
+ else
+   comment_re="^#"
+   Program_Modules=`grep -v '$comment_re' $1 | awk '{print [$]1}'`
+   Program_H_Modules=`grep -v '$comment_re' $1 | awk '{print [$]2}'`
+   for program_module in $Program_H_Modules; do
+     PROGRAM_HFILES="$PROGRAM_HFILES $program_module"
+   done
+ fi
+ for program_module in $Program_Modules; do
+   PROGRAM_OFILES="$PROGRAM_OFILES $program_module.o"
+   PROGRAM_CFILES="$PROGRAM_CFILES $program_module.c"
+   PROGRAM_OBJECTS="$PROGRAM_OBJECTS \$(OBJDIR)/$program_module.o"
+   PROGRAM_ELFOBJECTS="$PROGRAM_ELFOBJECTS \$(ELFDIR)/$program_module.o"
+ done
+ echo $PROGRAM_OFILES
+ echo $PROGRAM_HFILES
+AC_SUBST(PROGRAM_OFILES)dnl
+AC_SUBST(PROGRAM_CFILES)dnl
+AC_SUBST(PROGRAM_HFILES)dnl
+AC_SUBST(PROGRAM_OBJECTS)dnl
+AC_SUBST(PROGRAM_ELFOBJECTS)dnl
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_APPEND_RULES,
+[ 
+ echo "$PROGRAM_OBJECT_RULES" >> $1
+])
+dnl-------------------------------------------------------------------------
+
+AC_DEFUN(JD_APPEND_ELFRULES,
+[ 
+ echo "$PROGRAM_ELF_ORULES" >> $1
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_CREATE_MODULE_EXEC_RULES,
+[
+ for program_module in $Program_Modules; do
+   JD_CREATE_EXEC_RULE($program_module)
+ done
+])
+dnl-------------------------------------------------------------------------
+
+AC_DEFUN(JD_TERMCAP,
+[
+JD_Terminfo_Dirs="/usr/lib/terminfo \
+                 /usr/share/terminfo \
+                 /usr/share/lib/terminfo \
+		 /usr/local/lib/terminfo"
+
+TERMCAP=-ltermcap
+
+AC_MSG_CHECKING(for Terminfo)
+for terminfo_dir in $JD_Terminfo_Dirs
+do
+   if test -d $terminfo_dir 
+   then
+      AC_MSG_RESULT(yes)
+      TERMCAP=""
+      break
+   fi
+done
+if test "$TERMCAP"; then
+  AC_MSG_RESULT(no)
+  AC_DEFINE(USE_TERMCAP)
+fi
+AC_SUBST(TERMCAP)dnl
+])
+
+dnl-------------------------------------------------------------------------
+AC_DEFUN(JD_ANSI_CC,
+[
+AC_PROG_CC
+AC_PROG_CPP
+AC_PROG_GCC_TRADITIONAL
+AC_ISC_POSIX
+AC_AIX
+
+dnl #This stuff came from Yorick config script
+dnl
+dnl # HPUX needs special stuff
+dnl
+AC_EGREP_CPP(yes,
+[#ifdef hpux
+  yes
+#endif
+], [
+AC_DEFINE(_HPUX_SOURCE)
+if test "$CC" = cc; then CC="cc -Ae"; fi
+])dnl
+dnl
+dnl #Be sure we've found compiler that understands prototypes
+dnl
+AC_MSG_CHECKING(C compiler that understands ANSI prototypes)
+AC_TRY_COMPILE([ ],[
+ extern int silly (int);], [
+ AC_MSG_RESULT($CC looks ok.  Good.)], [
+ AC_MSG_RESULT($CC is not a good enough compiler)
+ AC_MSG_ERROR(Set env variable CC to your ANSI compiler and rerun configure.)
+ ])dnl
+])dnl
+dnl #----------------------------------------------------------------------
+
+
diff -Nur slrn-0.9.6.4pl4c.orig/autoconf/configure.in slrn-0.9.6.4pl4c/autoconf/configure.in
--- slrn-0.9.6.4pl4c.orig/autoconf/configure.in	Mon Mar 19 16:41:36 2001
+++ slrn-0.9.6.4pl4c/autoconf/configure.in	Fri Mar 30 04:06:20 2001
@@ -216,6 +216,27 @@
 isalpha isspace isdigit isalnum ispunct \
 )
 
+AC_MSG_CHECKING([whether to enable ipv6])
+AC_ARG_ENABLE(ipv6,
+[  --enable-ipv6           Enable ipv6 support
+  --disable-ipv6          Disable ipv6 support],
+[case "$enableval" in
+  no)   AC_MSG_RESULT(no)
+        ;;
+  *)    AC_MSG_RESULT(yes)
+        CFLAGS="$CFLAGS -DINET6"
+        ;;
+esac],
+AC_TRY_RUN([ /* PF_INET6 avalable check */
+#include <sys/types.h>
+#include <sys/socket.h>
+main(){if (socket(PF_INET6, SOCK_STREAM, 0) < 0) exit(1); else exit(0);}
+],[     AC_MSG_RESULT(yes)
+        CFLAGS="$CFLAGS -DINET6"
+],[     AC_MSG_RESULT(no)
+],[     AC_MSG_RESULT(unknown)
+]))
+
 AC_MSG_CHECKING(for timezone in time.h)
 AC_TRY_LINK([#include <time.h>],
 	[long int tz; tz = timezone % 1],
diff -Nur slrn-0.9.6.4pl4c.orig/src/clientlib.c slrn-0.9.6.4pl4c/src/clientlib.c
--- slrn-0.9.6.4pl4c.orig/src/clientlib.c	Sun Mar 18 20:08:21 2001
+++ slrn-0.9.6.4pl4c/src/clientlib.c	Fri Mar 30 04:04:08 2001
@@ -285,9 +285,11 @@
 {
 #ifndef NETLIB
    int	s = -1;
+#ifndef INET6
    struct	sockaddr_in s_in;
 #endif
-#ifdef TLI
+#endif
+#ifdef TLI	/* FIXME:INET6 */
    char 	*t_alloc();
    struct	t_call	*callptr;
    /*
@@ -415,24 +417,44 @@
      }
    return(0);
 # else
-#  ifndef EXCELAN
+#  ifdef INET6
+   struct	addrinfo hints, *res0, *res;
+   int		gai;
+   char		servbuf[NI_MAXSERV];
+   int		x = 0;
+   if (nntpport < 0) nntpport = NNTP_PORT;
+   sprintf(servbuf, "%d", nntpport);
+   memset(&hints,0,sizeof(hints));
+   hints.ai_family = PF_UNSPEC;
+   hints.ai_socktype = SOCK_STREAM;
+   hints.ai_flags = AI_CANONNAME;
+   gai = getaddrinfo(machine,servbuf,&hints,&res0);
+   if (gai)
+     {
+       fprintf(stderr, 
+	       "%s port %s: %s\n", 
+	       machine, servbuf, gai_strerror(gai));
+       return (-1);
+     }
+#  else /* INET6 / !INET6 */
+#   ifndef EXCELAN
    struct	servent *sp;
    struct	hostent *hp;
-#   ifdef VMS
-#   else
+#    ifdef VMS
+#    else
    DECLARE_EXTERN(struct servent *getservbyname())
    DECLARE_EXTERN(struct hostent *gethostbyname())
-#   endif
-#   ifdef h_addr
+#    endif
+#    ifdef h_addr
    int	x = 0;
    register char **cp;
    static char *alist[1];
-#   endif /* h_addr */
+#    endif /* h_addr */
    static struct hostent def;
    static struct in_addr defaddr;
    static char namebuf[ 256 ];
    DECLARE_EXTERN(unsigned long inet_addr())
-#   ifndef UCX
+#    ifndef UCX
    struct servent sp_buffer;
 
    if (nntpport >= 0)
@@ -449,11 +471,11 @@
 	     return (-1);
 	  }
      }
-#   else
+#    else
    if (nntpport < 0) nntpport = NNTP_PORT;
    sp = (struct servent *)malloc(sizeof(struct servent));
    sp->s_port = htons((unsigned short)nntpport);
-#   endif
+#    endif
    /* If not a raw ip address, try nameserver */
    if (!isdigit(*machine) ||
        (long)(defaddr.s_addr = inet_addr(machine)) == -1)
@@ -463,9 +485,9 @@
 	/* Raw ip address, fake  */
 	(void) slrn_strncpy (namebuf, machine, sizeof (namebuf));
 	def.h_name = namebuf;
-#   ifdef h_addr
+#    ifdef h_addr
 	def.h_addr_list = alist;
-#   endif
+#    endif
 	def.h_addr = (char *)&defaddr;
 	def.h_length = sizeof(struct in_addr);
 	def.h_addrtype = AF_INET;
@@ -481,10 +503,11 @@
    memset ((char *) &s_in, 0, sizeof(s_in));
    s_in.sin_family = hp->h_addrtype;
    s_in.sin_port = sp->s_port;
-#  else /* EXCELAN */
+#   else /* EXCELAN */
    memset ((char *) &s_in, 0, sizeof(s_in));
    s_in.sin_family = AF_INET;
-#  endif /* EXCELAN */
+#   endif /* EXCELAN */
+#  endif /* !INET6 */
 
    /*
     * The following is kinda gross.  The name server under 4.3
@@ -496,7 +519,37 @@
     * code...
     */
 
-#  ifdef	h_addr
+#  ifdef INET6
+   x = -1;
+   for (res=res0; res; res=res->ai_next)
+     {
+       char addrbuf[NI_MAXSERV];
+       if (getnameinfo(res->ai_addr, res->ai_addrlen,
+		       addrbuf, sizeof(addrbuf), NULL, 0,
+		       NI_NUMERICHOST))
+	 strcpy(addrbuf, "???");
+       s = socket(res->ai_family, res->ai_socktype, res->ai_protocol);
+       if (s < 0)
+	 {
+	   perror("socket");
+	   continue;
+	 }
+       if (x < 0)
+	   fprintf(stderr, "trying %s\n", addrbuf);
+       x = connect(s, res->ai_addr, res->ai_addrlen);
+       if (x == 0)
+	 break;
+       fprintf(stderr, "connection to %s: ", addrbuf);
+       perror("");
+       (void) close(s);
+     }
+   if (x < 0)
+     {
+       fprintf(stderr, "giving up...\n");
+       return (-1);
+     }
+#  else
+#   ifdef	h_addr
 
    /* get a socket and initiate connection -- use multiple addresses */
 
@@ -526,8 +579,8 @@
 	fprintf(stderr, "giving up...\n");
 	return (-1);
      }
-#  else	/* no name server */
-#   ifdef EXCELAN
+#   else	/* no name server */
+#    ifdef EXCELAN
    if ((s = socket(SOCK_STREAM,(struct sockproto *)NULL,&s_in,SO_KEEPALIVE)) < 0)
      {
 	/* Get the socket */
@@ -553,7 +606,7 @@
 	(void) close(s);
 	return (-1);
      }
-#   else /* not EXCELAN */
+#    else /* not EXCELAN */
    if ((s = socket(AF_INET, SOCK_STREAM, 0)) < 0)
      {
 	perror("socket");
@@ -570,8 +623,9 @@
 	return (-1);
      }
 
-#   endif /* !EXCELAN */
-#  endif /* !h_addr */
+#    endif /* !EXCELAN */
+#   endif /* !h_addr */
+#  endif /* !INET6 */
 # endif /* !NETLIB */
 #endif /* !TLI */
 
diff -Nur slrn-0.9.6.4pl4c.orig/src/sltcp.c slrn-0.9.6.4pl4c/src/sltcp.c
--- slrn-0.9.6.4pl4c.orig/src/sltcp.c	Thu Mar  1 18:46:20 2001
+++ slrn-0.9.6.4pl4c/src/sltcp.c	Fri Mar 30 04:04:08 2001
@@ -166,6 +166,11 @@
  */
 static int get_tcp_socket_1 (char *host, int port) /*{{{*/
 {
+#ifdef INET6
+   struct addrinfo hints, *res0, *res;
+   int gai;
+   char servbuf[NI_MAXSERV];
+#else
    char **h_addr_list;
    /* h_addr_list is NULL terminated if h_addr is defined.  If h_addr
     * is not defined, h_addr is the only element in the list.  When
@@ -176,9 +181,22 @@
    char *fake_h_addr_list[2];
    unsigned long fake_addr;
    struct sockaddr_in s_in;
+#endif
    int s;
    int not_connected;
 
+#ifdef INET6
+   sprintf(servbuf, "%d", port);
+   memset(&hints, 0, sizeof(hints));
+   hints.ai_family = PF_UNSPEC;
+   hints.ai_socktype = SOCK_STREAM;
+   gai = getaddrinfo(host, servbuf, &hints, &res0);
+   if (gai)
+     {
+	fprintf(stderr, "%s port %s: %s\n", host, servbuf, gai_strerror(gai));
+	return -1;
+     }
+#else	/* INET6 / !INET6 */
    /* If it does not look like a numerical address, use nameserver */
    if (!isdigit(*host) || (-1L == (long)(fake_addr = inet_addr (host))))
      {
@@ -222,14 +240,47 @@
    memset ((char *) &s_in, 0, sizeof(s_in));
    s_in.sin_family = h_addr_type;
    s_in.sin_port = htons((unsigned short) port);
+#endif	/* !INET6 */
 
+   not_connected = -1;
+
+#ifdef INET6
+   for (res=res0; res; res=res->ai_next)
+     {
+	char addrbuf[NI_MAXHOST];
+	if (getnameinfo(res->ai_addr, res->ai_addrlen,
+			addrbuf, sizeof(addrbuf), NULL, 0,
+			NI_NUMERICHOST))
+	  strcpy(addrbuf, "???");
+	if (-1 == (s = socket(res->ai_family, res->ai_socktype, res->ai_protocol)))
+	  {
+	    perror("socket");
+	    continue;
+	  }
+	if (TCP_Verbose_Reporting) fprintf (stderr, "trying %s\n", addrbuf);
+	not_connected = connect (s, res->ai_addr, res->ai_addrlen);
+	if (not_connected == -1)
+	  {
+#ifdef EINTR
+	if (errno == EINTR) /* If interrupted, try again. */
+	  {
+	    if (0 == sys_call_interrupted_hook ())
+	    continue;
+	  }
+#endif
+	fprintf (stderr, "connection to %s, port %s:",
+		 (char *) addrbuf, servbuf);
+	perror ("");
+	  }
+	if (!not_connected)
+	  break;
+     }
+#else	/* INET6 / !INET6 */
    if (-1 == (s = socket (h_addr_type, SOCK_STREAM, 0)))
      {
 	perror("socket");
 	return -1;
      }
-	
-   not_connected = -1;
    
    while (not_connected 
 	  && (h_addr_list != NULL) 
@@ -260,6 +311,7 @@
 	  }
 	h_addr_list++;
      }
+#endif	/* !INET6 */
    
    if (not_connected) 
      {
