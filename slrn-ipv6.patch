diff -Nur slrn-0.9.7.3.orig/configure.in slrn-0.9.7.3/configure.in
--- slrn-0.9.7.3.orig/configure.in	Mon Mar 19 16:41:36 2001
+++ slrn-0.9.7.3/configure.in	Fri Mar 30 04:06:20 2001
@@ -216,6 +216,27 @@
 isalpha isspace isdigit isalnum ispunct \
 )
 
+AC_MSG_CHECKING([whether to enable ipv6])
+AC_ARG_ENABLE(ipv6,
+[  --enable-ipv6           Enable ipv6 support
+  --disable-ipv6          Disable ipv6 support],
+[case "$enableval" in
+  no)   AC_MSG_RESULT(no)
+        ;;
+  *)    AC_MSG_RESULT(yes)
+        CFLAGS="$CFLAGS -DINET6"
+        ;;
+esac],
+AC_TRY_RUN([ /* PF_INET6 avalable check */
+#include <sys/types.h>
+#include <sys/socket.h>
+main(){if (socket(PF_INET6, SOCK_STREAM, 0) < 0) exit(1); else exit(0);}
+],[     AC_MSG_RESULT(yes)
+        CFLAGS="$CFLAGS -DINET6"
+],[     AC_MSG_RESULT(no)
+],[     AC_MSG_RESULT(unknown)
+]))
+
 AC_MSG_CHECKING(for timezone in time.h)
 AC_TRY_LINK([#include <time.h>],
 	[long int tz; tz = timezone % 1],
diff -Nur slrn-0.9.6.4pl4c.orig/src/sltcp.c slrn-0.9.6.4pl4c/src/sltcp.c
--- slrn-0.9.6.4pl4c.orig/src/sltcp.c	Thu Mar  1 18:46:20 2001
+++ slrn-0.9.6.4pl4c/src/sltcp.c	Fri Mar 30 04:04:08 2001
@@ -166,6 +166,11 @@
  */
 static int get_tcp_socket_1 (char *host, int port) /*{{{*/
 {
+#ifdef INET6
+   struct addrinfo hints, *res0, *res;
+   int gai;
+   char servbuf[NI_MAXSERV];
+#else
    char **h_addr_list;
    /* h_addr_list is NULL terminated if h_addr is defined.  If h_addr
     * is not defined, h_addr is the only element in the list.  When
@@ -176,9 +181,22 @@
    char *fake_h_addr_list[2];
    unsigned long fake_addr;
    struct sockaddr_in s_in;
+#endif
    int s;
    int not_connected;
 
+#ifdef INET6
+   sprintf(servbuf, "%d", port);
+   memset(&hints, 0, sizeof(hints));
+   hints.ai_family = PF_UNSPEC;
+   hints.ai_socktype = SOCK_STREAM;
+   gai = getaddrinfo(host, servbuf, &hints, &res0);
+   if (gai)
+     {
+	fprintf(stderr, "%s port %s: %s\n", host, servbuf, gai_strerror(gai));
+	return -1;
+     }
+#else	/* INET6 / !INET6 */
    /* If it does not look like a numerical address, use nameserver */
    if (!isdigit(*host) || (-1L == (long)(fake_addr = inet_addr (host))))
      {
@@ -222,14 +240,47 @@
    memset ((char *) &s_in, 0, sizeof(s_in));
    s_in.sin_family = h_addr_type;
    s_in.sin_port = htons((unsigned short) port);
+#endif	/* !INET6 */
 
+   not_connected = -1;
+
+#ifdef INET6
+   for (res=res0; res; res=res->ai_next)
+     {
+	char addrbuf[NI_MAXHOST];
+	if (getnameinfo(res->ai_addr, res->ai_addrlen,
+			addrbuf, sizeof(addrbuf), NULL, 0,
+			NI_NUMERICHOST))
+	  strcpy(addrbuf, "???");
+	if (-1 == (s = socket(res->ai_family, res->ai_socktype, res->ai_protocol)))
+	  {
+	    perror("socket");
+	    continue;
+	  }
+	if (TCP_Verbose_Reporting) fprintf (stderr, "trying %s\n", addrbuf);
+	not_connected = connect (s, res->ai_addr, res->ai_addrlen);
+	if (not_connected == -1)
+	  {
+#ifdef EINTR
+	if (errno == EINTR) /* If interrupted, try again. */
+	  {
+	    if (0 == sys_call_interrupted_hook ())
+	    continue;
+	  }
+#endif
+	fprintf (stderr, "connection to %s, port %s:",
+		 (char *) addrbuf, servbuf);
+	perror ("");
+	  }
+	if (!not_connected)
+	  break;
+     }
+#else	/* INET6 / !INET6 */
    if (-1 == (s = socket (h_addr_type, SOCK_STREAM, 0)))
      {
 	perror("socket");
 	return -1;
      }
-	
-   not_connected = -1;
    
    while (not_connected 
 	  && (h_addr_list != NULL) 
@@ -260,6 +311,7 @@
 	  }
 	h_addr_list++;
      }
+#endif	/* !INET6 */
    
    if (not_connected) 
      {
